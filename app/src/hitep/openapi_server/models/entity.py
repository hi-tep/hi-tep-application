from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from hitep.openapi_server.models.base_model import Model
from hitep.openapi_server import util


class Entity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iri=None, type=None, label=None):  # noqa: E501
        """Entity - a model defined in OpenAPI

        :param iri: The iri of this Entity.  # noqa: E501
        :type iri: str
        :param type: The type of this Entity.  # noqa: E501
        :type type: List[str]
        :param label: The label of this Entity.  # noqa: E501
        :type label: str
        """
        self.openapi_types = {
            'iri': str,
            'type': List[str],
            'label': str
        }

        self.attribute_map = {
            'iri': 'IRI',
            'type': 'type',
            'label': 'label'
        }

        self._iri = iri
        self._type = type
        self._label = label

    @classmethod
    def from_dict(cls, dikt) -> 'Entity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Entity of this Entity.  # noqa: E501
        :rtype: Entity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iri(self) -> str:
        """Gets the iri of this Entity.

        The IRI of the entity  # noqa: E501

        :return: The iri of this Entity.
        :rtype: str
        """
        return self._iri

    @iri.setter
    def iri(self, iri: str):
        """Sets the iri of this Entity.

        The IRI of the entity  # noqa: E501

        :param iri: The iri of this Entity.
        :type iri: str
        """
        if iri is None:
            raise ValueError("Invalid value for `iri`, must not be `None`")  # noqa: E501

        self._iri = iri

    @property
    def type(self) -> List[str]:
        """Gets the type of this Entity.

        The type(s) of the entity in the ontology  # noqa: E501

        :return: The type of this Entity.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type: List[str]):
        """Sets the type of this Entity.

        The type(s) of the entity in the ontology  # noqa: E501

        :param type: The type of this Entity.
        :type type: List[str]
        """

        self._type = type

    @property
    def label(self) -> str:
        """Gets the label of this Entity.

        A label associated with the entity  # noqa: E501

        :return: The label of this Entity.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this Entity.

        A label associated with the entity  # noqa: E501

        :param label: The label of this Entity.
        :type label: str
        """

        self._label = label
